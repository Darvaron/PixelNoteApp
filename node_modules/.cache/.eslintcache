[{"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\index.js":"1","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\reportWebVitals.js":"2","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\App.js":"3","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebar\\sidebar.js":"4","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebar\\styles.js":"5","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebarItem\\sidebarItem.js":"6","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebarItem\\styles.js":"7","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\helpers.js":"8","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\editor\\editor.js":"9","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\editor\\styles.js":"10","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\canvas\\canvas.js":"11","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\login\\login.js":"12","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\signup\\signup.js":"13","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\signup\\styles.js":"14","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\login\\styles.js":"15"},{"size":1495,"mtime":1632281574734,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":5140,"mtime":1632282166838,"results":"19","hashOfConfig":"17"},{"size":3589,"mtime":1632281427408,"results":"20","hashOfConfig":"17"},{"size":1675,"mtime":1632281131472,"results":"21","hashOfConfig":"17"},{"size":2074,"mtime":1632078167962,"results":"22","hashOfConfig":"17"},{"size":433,"mtime":1632015863377,"results":"23","hashOfConfig":"17"},{"size":727,"mtime":1631999119980,"results":"24","hashOfConfig":"17"},{"size":3087,"mtime":1632260570233,"results":"25","hashOfConfig":"17"},{"size":916,"mtime":1632260694595,"results":"26","hashOfConfig":"17"},{"size":2101,"mtime":1632260028342,"results":"27","hashOfConfig":"17"},{"size":3695,"mtime":1632284315923,"results":"28","hashOfConfig":"17"},{"size":5405,"mtime":1632279415837,"results":"29","hashOfConfig":"17"},{"size":990,"mtime":1632265566283,"results":"30","hashOfConfig":"17"},{"size":990,"mtime":1632282634463,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y3s0tk",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\index.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\reportWebVitals.js",[],["65","66"],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\App.js",["67"],"import React from 'react'\nimport './App.css'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\nimport SidebarComponent from './sidebar/sidebar'\nimport EditorComponent from './editor/editor'\nimport Canvas from './canvas/canvas'\n\n// Clase principal de React\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      // Variables de estado\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n      email: null,\n    }\n  }\n\n  render() {\n    // Página principal de la aplicación\n    if (this.state.email) {\n      return (\n        <div className=\"app-container\">\n          <SidebarComponent\n            selectedNoteIndex={this.state.selectedNoteIndex}\n            notes={this.state.notes}\n            deleteNote={this.deleteNote}\n            selectNote={this.selectNote}\n            newNote={this.newNote}\n            signOut={this.signOut}\n          ></SidebarComponent>\n          {this.state.selectedNote ? ( // Si ha seleccionado una nota\n            <EditorComponent\n              selectedNote={this.state.selectedNote}\n              selectedNoteIndex={this.state.selectedNoteIndex}\n              notes={this.state.notes}\n              noteUpdate={this.noteUpdate}\n            ></EditorComponent>\n          ) : // Si no ha seleccionada nada no despliega el editor\n          null}\n          {/*{this.state.selectedNote ? ( // Si ha seleccionado una nota\n            <Canvas/>\n          ) : null}*/}\n        </div>\n      )\n    }else{\n      return(<div>CARGANDO ...</div>)\n    }\n  }\n\n  // Cierre de sesión\n  signOut = () => {\n    this.props.history.push('/login')\n  }\n\n  // Elimina la nota\n  deleteNote = async (note) => {\n    const noteIndex = this.state.notes.indexOf(note)\n    await this.setState({\n      notes: this.state.notes.filter((_note) => _note !== note),\n    })\n    if (this.state.selectedNoteIndex === noteIndex) {\n      // Si esta en la nota que quiere eliminar\n      this.setState({\n        selectedNoteIndex: null, // Deselecciona la nota actual\n        selectedNote: null,\n      })\n    } else {\n      // Si no esta en la nota que quiere eliminar\n      if (this.state.notes.length >= 1) {\n        // Si tiene una o más notas\n        this.state.selectedNoteIndex < noteIndex // Esta en una nota de indice menor al que se eliminó\n          ? this.selectNote(\n              // Sigue en la misma nota\n              this.state.notes[this.state.selectedNoteIndex],\n              this.state.selectedNoteIndex,\n            ) // Si esta en una nota de indice mayor a la eliminada\n          : this.selectNote(\n              this.state.notes[this.state.selectedNoteIndex - 1],\n              this.state.selectedNoteIndex - 1,\n            )\n      } else {\n        // Si no tiene una o más de una nota\n        this.setState({\n          selectedNoteIndex: null, // Deselecciona la nota actual\n          selectedNote: null,\n        })\n      }\n    }\n\n    // Elimina de la base de datos\n    firebase.firestore().collection('notes').doc(note.id).delete()\n  }\n\n  // Nueva nota\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: '',\n    }\n    const newFromDB = await firebase.firestore().collection('notes').add({\n      // Crea un nuevo registro en la base de datos\n      title: note.title,\n      body: note.body,\n      email: this.state.email,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(), // Fecha de creación\n    })\n    const newID = newFromDB.id\n    await this.setState({ notes: [...this.state.notes, note] }) // Actualiza el estado con las notas que ya existen más la nueva nota\n    const newNoteIndex = this.state.notes.indexOf(\n      this.state.notes.filter((_note) => _note.id === newID)[0],\n    ) // Obtiene el nuevo index\n    this.setState({\n      selectedNote: this.state.notes[newNoteIndex],\n      selectedNoteIndex: newNoteIndex,\n    }) // Selecciona el nuevo index\n  }\n\n  // Actualiza en la base de datos\n  noteUpdate = (id, note) => {\n    firebase.firestore().collection('notes').doc(id).update({\n      title: note.title,\n      body: note.body,\n      email: this.state.email,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(), // Última vez editado\n    })\n  }\n\n  // Selecciona la nota\n  selectNote = (n, i) => {\n    this.setState({\n      selectedNoteIndex: i,\n      selectedNote: n,\n    })\n  }\n\n  // Cuando el cargue satisfactoriamente se llama automaticamente\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if(!_usr){\n        this.props.history.push('/login')\n      }\n      else{\n        await firebase\n        .firestore()\n        .collection('notes')\n        .where('email', '==', _usr.email)\n        .onSnapshot((serverUpdate) => {\n          // Cada vez que se actualice la base de datos\n          const notes = serverUpdate.docs.map((_doc) => {\n            // Mapeado\n            const data = _doc.data()\n            data['id'] = _doc.id\n            return data\n          })\n          //console.log(notes)\n          this.setState({ notes: notes,\n            email: _usr.email\n          })\n        })\n      }\n    })\n  }\n}\n\nexport default App\n","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebar\\sidebar.js",["68"],"import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport styles from './styles'\r\nimport List from '@material-ui/core/List'\r\nimport { Divider, Button } from '@material-ui/core'\r\nimport SidebarItemComponent from '../sidebarItem/sidebarItem'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\n// Barra lateral del proyecto\r\n\r\nclass SidebarComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      addingNote: false,\r\n      title: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Enviados a través de App.js\r\n    const { notes, classes, selectedNoteIndex } = this.props\r\n\r\n    // Lidiando con el asicronismo, si existen las notas\r\n    if (notes) {\r\n      return (\r\n        <div className={classes.sidebarContainer}>\r\n          {/*Añade una nueva nota*/}\r\n          <Button onClick={this.newNoteBtnClick} className={classes.newNoteBtn}>\r\n            {this.state.addingNote ? 'Cancelar' : 'Nueva nota'}\r\n          </Button>\r\n          {\r\n            // Si esta añadiendo una nueva nota\r\n            this.state.addingNote ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classes.newNoteInput}\r\n                  placeholder=\"Título\"\r\n                  onKeyUp={(e) => this.updateTitle(e.target.value)} // Cuando comience a escribir y suelte una tecla\r\n                ></input>\r\n                <Button\r\n                  className={classes.newNoteSubmitBtn}\r\n                  onClick={this.newNote}\r\n                >\r\n                  Crear nota\r\n                </Button>\r\n              </div>\r\n            ) : // Si no esta añadiendo una nota entonces no hace nada\r\n            null\r\n          }\r\n          <List>\r\n            {\r\n              // Mapeado de las notas a una lista de notas\r\n              notes.map((_note, _index) => {\r\n                return (\r\n                  <div key={_index}>\r\n                    <SidebarItemComponent\r\n                      _note={_note}\r\n                      _index={_index}\r\n                      selectedNoteIndex={selectedNoteIndex}\r\n                      selectNote={this.selectNote}\r\n                      deleteNote={this.deleteNote}\r\n                    ></SidebarItemComponent>\r\n                    <Divider></Divider> {/*Linea divisora entre items*/}\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n          <Button onClick={this.signOut} className={classes.signOutBtn}>Cerrar sesión</Button>\r\n        </div>\r\n      )\r\n    } else {\r\n      // No genera nada mientras carga las notas\r\n      return <div></div>\r\n    }\r\n  }\r\n\r\n  // Acción a realizar el botón de cerrar sesión\r\n  signOut = () => {\r\n    firebase.auth().signOut()\r\n    this.props.signOut()\r\n  }\r\n\r\n  // Actualiza el título del texto\r\n  updateTitle = (txt) => {\r\n    this.setState({ title: txt })\r\n  }\r\n\r\n  // Al presionar el botón de nueva nota\r\n  newNoteBtnClick = () => {\r\n    this.setState({ title: null, addingNote: !this.state.addingNote })\r\n  }\r\n\r\n  // Invoca la creación de la nota de App\r\n  newNote = () => {\r\n    this.props.newNote(this.state.title)\r\n    this.setState({title: null, addingNote: false})\r\n  }\r\n\r\n  // Invoca la selección de App\r\n  selectNote = (note, index) => {\r\n    this.props.selectNote(note, index)\r\n  }\r\n\r\n  // Invoca la eliminación de App\r\n  deleteNote = (note) => {\r\n    this.props.deleteNote(note)\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarComponent) // Exporta el componente con estilos\r\n","C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebar\\styles.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebarItem\\sidebarItem.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\sidebarItem\\styles.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\helpers.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\editor\\editor.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\editor\\styles.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\canvas\\canvas.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\login\\login.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\signup\\signup.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\signup\\styles.js",[],"C:\\Users\\darva\\Documents\\David\\UD\\Septimo semestre\\FIS\\PixeNoteApp\\pixelnote\\src\\login\\styles.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":18},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Canvas' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]