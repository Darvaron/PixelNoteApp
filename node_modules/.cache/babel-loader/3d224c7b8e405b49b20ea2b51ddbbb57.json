{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\signup\\\\signup.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport firebase from 'firebase';\nimport 'firebase/firestore'; //const firebase = require('firebase')\n// Componente de registro\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: e.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitSignup = e => {\n      e.preventDefault(); // Previene que se refresque la página automaticamente\n\n      if (!this.formIsValid()) {\n        // Si las contraseñas no coinciden\n        this.setState({\n          signupError: 'Las contraseñas no coinciden'\n        });\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password) // Crea un usuario en la autenticación\n      .then(authRes => {\n        // Cuando recibe la respuesta del servidor\n        const userObject = {\n          email: authRes.user.email\n        }; // Lo añade a la base de datos\n\n        firebase.firestore().collection('users').doc(this.state.email).set(userObject).then(() => {\n          // Propiedad pasada desde el router\n          this.props.history.push('/misnotas');\n        }, authErr => {\n          console.log('ERROR: ', authErr);\n          this.setState({\n            signupError: 'No se pudo añadir el usuario'\n          });\n        });\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Bienvenido a PixelNote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.submitSignup(e),\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-email-input\",\n              children: \"Ingresa tu email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"email\",\n              autoFocus: true,\n              id: \"signup-email-input\",\n              onChange: e => this.userTyping('email', e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-password-input\",\n              children: \"Crea tu contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              id: \"signup-password-input\",\n              onChange: e => this.userTyping('password', e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-password-confirmation-input\",\n              children: \"Confirma tu contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              id: \"signup-password-confirmation-input\",\n              onChange: e => this.userTyping('passwordConfirmation', e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Crea tu cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), this.state.signupError ?\n        /*#__PURE__*/\n        // Si hay un error\n        _jsxDEV(Typography, {\n          className: classes.errorText,\n          component: \"h5\",\n          variant: \"h6\",\n          children: this.state.signupError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h5\",\n          variant: \"h6\",\n          className: classes.hasAccountHeader,\n          children: \"\\xBFYa tienes una cuenta?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.logInLink,\n          to: \"/login\",\n          children: \"Ingresa con tu cuenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } // Validación del formulario\n\n\n}\n\nexport default withStyles(styles)(SignupComponent);","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/signup/signup.js"],"names":["Link","React","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","firebase","SignupComponent","Component","constructor","formIsValid","state","password","passwordConfirmation","userTyping","type","e","setState","email","target","value","submitSignup","preventDefault","signupError","auth","createUserWithEmailAndPassword","then","authRes","userObject","user","firestore","collection","doc","set","props","history","push","authErr","console","log","render","classes","main","paper","form","submit","errorText","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport React from 'react'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Input from '@material-ui/core/Input'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport styles from './styles'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\n//const firebase = require('firebase')\r\n\r\n// Componente de registro\r\n\r\nclass SignupComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: '',\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Bienvenido a PixelNote\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-email-input\">\r\n                Ingresa tu email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"signup-email-input\"\r\n                onChange={(e) => this.userTyping('email', e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-input\">\r\n                Crea tu contraseña\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"signup-password-input\"\r\n                onChange={(e) => this.userTyping('password', e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\r\n                Confirma tu contraseña\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"signup-password-confirmation-input\"\r\n                onChange={(e) => this.userTyping('passwordConfirmation', e)}\r\n              ></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Crea tu cuenta\r\n            </Button>\r\n          </form>\r\n          {this.state.signupError ? ( // Si hay un error\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n            >\r\n              {this.state.signupError}\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.hasAccountHeader}\r\n          >\r\n            ¿Ya tienes una cuenta?\r\n          </Typography>\r\n          <Link className={classes.logInLink} to=\"/login\">\r\n            Ingresa con tu cuenta\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  // Validación del formulario\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation\r\n\r\n  // Guarda lo que el usuario este escribiendo\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case 'email':\r\n        this.setState({ email: e.target.value })\r\n        break\r\n      case 'password':\r\n        this.setState({ password: e.target.value })\r\n        break\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: e.target.value })\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  // Sube el registro\r\n  submitSignup = (e) => {\r\n    e.preventDefault() // Previene que se refresque la página automaticamente\r\n    if (!this.formIsValid()) {\r\n      // Si las contraseñas no coinciden\r\n      this.setState({ signupError: 'Las contraseñas no coinciden' })\r\n      return\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password) // Crea un usuario en la autenticación\r\n      .then((authRes) => {\r\n        // Cuando recibe la respuesta del servidor\r\n        const userObject = {\r\n          email: authRes.user.email,\r\n        }\r\n        // Lo añade a la base de datos\r\n        firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(this.state.email)\r\n        .set(userObject)\r\n        .then(() =>{\r\n            // Propiedad pasada desde el router\r\n            this.props.history.push('/misnotas') \r\n        }, authErr => {\r\n            console.log('ERROR: ', authErr)\r\n            this.setState({signupError: 'No se pudo añadir el usuario'})\r\n        })\r\n    }) \r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SignupComponent)\r\n"]},"metadata":{},"sourceType":"module"}