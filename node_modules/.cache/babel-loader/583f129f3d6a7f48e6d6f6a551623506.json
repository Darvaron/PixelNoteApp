{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport SidebarComponent from './sidebar/sidebar';\nimport EditorComponent from './editor/editor';\nimport Canvas from './canvas/canvas'; // Clase principal de React\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.signOut = () => {\n      this.props.history.push('/login');\n    };\n\n    this.deleteNote = async note => {\n      const noteIndex = this.state.notes.indexOf(note);\n      await this.setState({\n        notes: this.state.notes.filter(_note => _note !== note)\n      });\n\n      if (this.state.selectedNoteIndex === noteIndex) {\n        // Si esta en la nota que quiere eliminar\n        this.setState({\n          selectedNoteIndex: null,\n          // Deselecciona la nota actual\n          selectedNote: null\n        });\n      } else {\n        // Si no esta en la nota que quiere eliminar\n        if (this.state.notes.length >= 1) {\n          // Si tiene una o más notas\n          this.state.selectedNoteIndex < noteIndex // Esta en una nota de indice menor al que se eliminó\n          ? this.selectNote( // Sigue en la misma nota\n          this.state.notes[this.state.selectedNoteIndex], this.state.selectedNoteIndex) // Si esta en una nota de indice mayor a la eliminada\n          : this.selectNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex - 1);\n        } else {\n          // Si no tiene una o más de una nota\n          this.setState({\n            selectedNoteIndex: null,\n            // Deselecciona la nota actual\n            selectedNote: null\n          });\n        }\n      } // Elimina de la base de datos\n\n\n      firebase.firestore().collection('notes').doc(note.id).delete();\n    };\n\n    this.newNote = async title => {\n      const note = {\n        title: title,\n        body: ''\n      };\n      const newFromDB = await firebase.firestore().collection('notes').add({\n        // Crea un nuevo registro en la base de datos\n        title: note.title,\n        body: note.body,\n        email: this.state.email,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp() // Fecha de creación\n\n      });\n      const newID = newFromDB.id;\n      await this.setState({\n        notes: [...this.state.notes, note]\n      }); // Actualiza el estado con las notas que ya existen más la nueva nota\n\n      const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0]); // Obtiene el nuevo index\n\n      this.setState({\n        selectedNote: this.state.notes[newNoteIndex],\n        selectedNoteIndex: newNoteIndex\n      }); // Selecciona el nuevo index\n    };\n\n    this.noteUpdate = (id, note) => {\n      firebase.firestore().collection('notes').doc(id).update({\n        title: note.title,\n        body: note.body,\n        email: this.state.email,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp() // Última vez editado\n\n      });\n    };\n\n    this.selectNote = (n, i) => {\n      this.setState({\n        selectedNoteIndex: i,\n        selectedNote: n\n      });\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n        if (!_usr) {\n          this.props.history.push('/login');\n        } else {\n          await firebase.firestore().collection('notes').where('email', '==', _usr.email).onSnapshot(serverUpdate => {\n            // Cada vez que se actualice la base de datos\n            const notes = serverUpdate.docs.map(_doc => {\n              // Mapeado\n              const data = _doc.data();\n\n              data['id'] = _doc.id;\n              return data;\n            }); //console.log(notes)\n\n            this.setState({\n              notes: notes,\n              email: _usr.email\n            });\n          });\n        }\n      });\n    };\n\n    this.state = {\n      // Variables de estado\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n      email: null\n    };\n  }\n\n  render() {\n    // Página principal de la aplicación\n    if (this.state.email) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [/*#__PURE__*/_jsxDEV(SidebarComponent, {\n          selectedNoteIndex: this.state.selectedNoteIndex,\n          notes: this.state.notes,\n          deleteNote: this.deleteNote,\n          selectNote: this.selectNote,\n          newNote: this.newNote,\n          signOut: this.signOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), this.state.selectedNote ?\n        /*#__PURE__*/\n        // Si ha seleccionado una nota\n        _jsxDEV(EditorComponent, {\n          selectedNote: this.state.selectedNote,\n          selectedNoteIndex: this.state.selectedNoteIndex,\n          notes: this.state.notes,\n          noteUpdate: this.noteUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : // Si no ha seleccionada nada no despliega el editor\n        null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"CARGANDO ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n  } // Cierre de sesión\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/App.js"],"names":["React","firebase","SidebarComponent","EditorComponent","Canvas","App","Component","constructor","signOut","props","history","push","deleteNote","note","noteIndex","state","notes","indexOf","setState","filter","_note","selectedNoteIndex","selectedNote","length","selectNote","firestore","collection","doc","id","delete","newNote","title","body","newFromDB","add","email","timestamp","FieldValue","serverTimestamp","newID","newNoteIndex","noteUpdate","update","n","i","componentDidMount","auth","onAuthStateChanged","_usr","where","onSnapshot","serverUpdate","docs","map","_doc","data","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\nimport SidebarComponent from './sidebar/sidebar'\nimport EditorComponent from './editor/editor'\nimport Canvas from './canvas/canvas'\n\n// Clase principal de React\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      // Variables de estado\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n      email: null,\n    }\n  }\n\n  render() {\n    // Página principal de la aplicación\n    if (this.state.email) {\n      return (\n        <div className=\"app-container\">\n          <SidebarComponent\n            selectedNoteIndex={this.state.selectedNoteIndex}\n            notes={this.state.notes}\n            deleteNote={this.deleteNote}\n            selectNote={this.selectNote}\n            newNote={this.newNote}\n            signOut={this.signOut}\n          ></SidebarComponent>\n          {this.state.selectedNote ? ( // Si ha seleccionado una nota\n            <EditorComponent\n              selectedNote={this.state.selectedNote}\n              selectedNoteIndex={this.state.selectedNoteIndex}\n              notes={this.state.notes}\n              noteUpdate={this.noteUpdate}\n            ></EditorComponent>\n          ) : // Si no ha seleccionada nada no despliega el editor\n          null}\n          {/*{this.state.selectedNote ? ( // Si ha seleccionado una nota\n            <Canvas/>\n          ) : null}*/}\n        </div>\n      )\n    }else{\n      return(<div>CARGANDO ...</div>)\n    }\n  }\n\n  // Cierre de sesión\n  signOut = () => {\n    this.props.history.push('/login')\n  }\n\n  // Elimina la nota\n  deleteNote = async (note) => {\n    const noteIndex = this.state.notes.indexOf(note)\n    await this.setState({\n      notes: this.state.notes.filter((_note) => _note !== note),\n    })\n    if (this.state.selectedNoteIndex === noteIndex) {\n      // Si esta en la nota que quiere eliminar\n      this.setState({\n        selectedNoteIndex: null, // Deselecciona la nota actual\n        selectedNote: null,\n      })\n    } else {\n      // Si no esta en la nota que quiere eliminar\n      if (this.state.notes.length >= 1) {\n        // Si tiene una o más notas\n        this.state.selectedNoteIndex < noteIndex // Esta en una nota de indice menor al que se eliminó\n          ? this.selectNote(\n              // Sigue en la misma nota\n              this.state.notes[this.state.selectedNoteIndex],\n              this.state.selectedNoteIndex,\n            ) // Si esta en una nota de indice mayor a la eliminada\n          : this.selectNote(\n              this.state.notes[this.state.selectedNoteIndex - 1],\n              this.state.selectedNoteIndex - 1,\n            )\n      } else {\n        // Si no tiene una o más de una nota\n        this.setState({\n          selectedNoteIndex: null, // Deselecciona la nota actual\n          selectedNote: null,\n        })\n      }\n    }\n\n    // Elimina de la base de datos\n    firebase.firestore().collection('notes').doc(note.id).delete()\n  }\n\n  // Nueva nota\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: '',\n    }\n    const newFromDB = await firebase.firestore().collection('notes').add({\n      // Crea un nuevo registro en la base de datos\n      title: note.title,\n      body: note.body,\n      email: this.state.email,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(), // Fecha de creación\n    })\n    const newID = newFromDB.id\n    await this.setState({ notes: [...this.state.notes, note] }) // Actualiza el estado con las notas que ya existen más la nueva nota\n    const newNoteIndex = this.state.notes.indexOf(\n      this.state.notes.filter((_note) => _note.id === newID)[0],\n    ) // Obtiene el nuevo index\n    this.setState({\n      selectedNote: this.state.notes[newNoteIndex],\n      selectedNoteIndex: newNoteIndex,\n    }) // Selecciona el nuevo index\n  }\n\n  // Actualiza en la base de datos\n  noteUpdate = (id, note) => {\n    firebase.firestore().collection('notes').doc(id).update({\n      title: note.title,\n      body: note.body,\n      email: this.state.email,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(), // Última vez editado\n    })\n  }\n\n  // Selecciona la nota\n  selectNote = (n, i) => {\n    this.setState({\n      selectedNoteIndex: i,\n      selectedNote: n,\n    })\n  }\n\n  // Cuando el cargue satisfactoriamente se llama automaticamente\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if(!_usr){\n        this.props.history.push('/login')\n      }\n      else{\n        await firebase\n        .firestore()\n        .collection('notes')\n        .where('email', '==', _usr.email)\n        .onSnapshot((serverUpdate) => {\n          // Cada vez que se actualice la base de datos\n          const notes = serverUpdate.docs.map((_doc) => {\n            // Mapeado\n            const data = _doc.data()\n            data['id'] = _doc.id\n            return data\n          })\n          //console.log(notes)\n          this.setState({ notes: notes,\n            email: _usr.email\n          })\n        })\n      }\n    })\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}