{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\canvas\\\\canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport './styles.css'; // Componente para dibujar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas() {\n  _s();\n\n  // Referencia al canvas actual\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null); // Para determinar si se encuentra dibujando\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current; // Redefiniendo densidad de pixeles\n\n    canvas.width = window.innerWidth * 2; // Para pantallas de alta densidad\n\n    canvas.height = window.innerHeight * 2; // Para pantallas de alta densidad\n\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`; // Contexto donde se dibuja\n\n    const context = canvas.getContext('2d');\n    context.scale(2, 2); // Para soportar la densidad de pixeles\n\n    context.lineCap = 'round'; // Para el final del trazo\n\n    context.strokeStyle = 'black'; // Estilo\n\n    context.lineWitdh = 5; // Ancho de la linea\n\n    contextRef.current = context;\n  }, []);\n\n  const draw = ({\n    nativeEvent\n  }) => {\n    // Dibuja\n    if (isDrawing) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent; // Obtiene la posici贸n\n\n      contextRef.current.lineTo(offsetX, offsetY); // Dibuja\n\n      contextRef.current.stroke();\n    }\n  };\n\n  const endDrawing = () => {\n    // Termina de dibujar\n    setIsDrawing(false);\n    contextRef.current.closePath();\n  };\n\n  const starDrawing = ({\n    nativeEvent\n  }) => {\n    // Inicia el dibujo\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent; // Obtiene la posici贸n\n\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"layout-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: starDrawing,\n      onMouseUp: endDrawing,\n      onMouseMove: draw,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Canvas, \"gX+PwV6uGFVV0Nk+m7BEZwABNTU=\");\n\n_c = Canvas;\nexport default Canvas; // Exporta el componente con estilos\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/canvas/canvas.js"],"names":["React","useEffect","useState","useRef","Canvas","canvasRef","contextRef","isDrawing","setIsDrawing","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWitdh","draw","nativeEvent","offsetX","offsetY","lineTo","stroke","endDrawing","closePath","starDrawing","beginPath","moveTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAO,cAAP,C,CAEA;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA,QAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMG,UAAU,GAAGH,MAAM,CAAC,IAAD,CAAzB,CAHgB,CAIhB;;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,MAAM,GAAGJ,SAAS,CAACK,OAAzB,CADc,CAEd;;AACAD,IAAAA,MAAM,CAACE,KAAP,GAAeC,MAAM,CAACC,UAAP,GAAoB,CAAnC,CAHc,CAGuB;;AACrCJ,IAAAA,MAAM,CAACK,MAAP,GAAgBF,MAAM,CAACG,WAAP,GAAqB,CAArC,CAJc,CAIyB;;AACvCN,IAAAA,MAAM,CAACO,KAAP,CAAaL,KAAb,GAAsB,GAAEC,MAAM,CAACC,UAAW,IAA1C;AACAJ,IAAAA,MAAM,CAACO,KAAP,CAAaF,MAAb,GAAuB,GAAEF,MAAM,CAACG,WAAY,IAA5C,CANc,CAQd;;AACA,UAAME,OAAO,GAAGR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAc,CAAd,EAAiB,CAAjB,EAVc,CAUM;;AACpBF,IAAAA,OAAO,CAACG,OAAR,GAAkB,OAAlB,CAXc,CAWY;;AAC1BH,IAAAA,OAAO,CAACI,WAAR,GAAsB,OAAtB,CAZc,CAYgB;;AAC9BJ,IAAAA,OAAO,CAACK,SAAR,GAAoB,CAApB,CAbc,CAaQ;;AACtBhB,IAAAA,UAAU,CAACI,OAAX,GAAqBO,OAArB;AACD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMM,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAmB;AAAE;AAChC,QAAGjB,SAAH,EAAa;AACT,YAAM;AAACkB,QAAAA,OAAD;AAAUC,QAAAA;AAAV,UAAqBF,WAA3B,CADS,CAC8B;;AACvClB,MAAAA,UAAU,CAACI,OAAX,CAAmBiB,MAAnB,CAA0BF,OAA1B,EAAmCC,OAAnC,EAFS,CAEmC;;AAC5CpB,MAAAA,UAAU,CAACI,OAAX,CAAmBkB,MAAnB;AACH;AACF,GAND;;AAQA,QAAMC,UAAU,GAAG,MAAM;AAAE;AACzBrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,UAAU,CAACI,OAAX,CAAmBoB,SAAnB;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAAC;AAACP,IAAAA;AAAD,GAAD,KAAmB;AAAE;AACvC,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAqBF,WAA3B,CADqC,CACE;;AACvClB,IAAAA,UAAU,CAACI,OAAX,CAAmBsB,SAAnB;AACA1B,IAAAA,UAAU,CAACI,OAAX,CAAmBuB,MAAnB,CAA0BR,OAA1B,EAAmCC,OAAnC;AACAlB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA,2BACE;AACE,MAAA,WAAW,EAAEuB,WADf;AAEE,MAAA,SAAS,EAAEF,UAFb;AAGE,MAAA,WAAW,EAAEN,IAHf;AAIE,MAAA,GAAG,EAAElB;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtDQD,M;;KAAAA,M;AAwDT,eAAeA,MAAf,C,CAAsB","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nimport './styles.css'\r\n\r\n// Componente para dibujar\r\n\r\nfunction Canvas() {\r\n  // Referencia al canvas actual\r\n  const canvasRef = useRef(null)\r\n  const contextRef = useRef(null)\r\n  // Para determinar si se encuentra dibujando\r\n  const [isDrawing, setIsDrawing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    // Redefiniendo densidad de pixeles\r\n    canvas.width = window.innerWidth * 2 // Para pantallas de alta densidad\r\n    canvas.height = window.innerHeight * 2 // Para pantallas de alta densidad\r\n    canvas.style.width = `${window.innerWidth}px`\r\n    canvas.style.height = `${window.innerHeight}px`\r\n\r\n    // Contexto donde se dibuja\r\n    const context = canvas.getContext('2d')\r\n    context.scale(2, 2) // Para soportar la densidad de pixeles\r\n    context.lineCap = 'round' // Para el final del trazo\r\n    context.strokeStyle = 'black' // Estilo\r\n    context.lineWitdh = 5 // Ancho de la linea\r\n    contextRef.current = context\r\n  }, [])\r\n\r\n  const draw = ({nativeEvent}) => { // Dibuja\r\n    if(isDrawing){\r\n        const {offsetX, offsetY} = nativeEvent // Obtiene la posici贸n\r\n        contextRef.current.lineTo(offsetX, offsetY) // Dibuja\r\n        contextRef.current.stroke()\r\n    }\r\n  }\r\n\r\n  const endDrawing = () => { // Termina de dibujar\r\n    setIsDrawing(false)\r\n    contextRef.current.closePath()\r\n  }\r\n\r\n  const starDrawing = ({nativeEvent}) => { // Inicia el dibujo\r\n    const {offsetX, offsetY} = nativeEvent // Obtiene la posici贸n\r\n    contextRef.current.beginPath()\r\n    contextRef.current.moveTo(offsetX, offsetY)\r\n    setIsDrawing(true)\r\n  }\r\n\r\n  return (\r\n    <div class=\"layout-container\">\r\n      <canvas\r\n        onMouseDown={starDrawing}\r\n        onMouseUp={endDrawing}\r\n        onMouseMove={draw}\r\n        ref={canvasRef}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Canvas // Exporta el componente con estilos\r\n"]},"metadata":{},"sourceType":"module"}