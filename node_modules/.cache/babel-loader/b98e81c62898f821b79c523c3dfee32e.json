{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\editor\\\\editor.js\";\nimport React from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles'; // Componente editor del aplicativo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditorComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.updateBody = async val => {\n      // Funci贸n asincrona que actualiza el estado\n      await this.setState({\n        text: val\n      });\n      this.update();\n    };\n\n    this.update = debounce(() => {\n      // Espera a que el usuario pare 1.5 segundos y en dado caso guarda en la base de datos\n      console.log('ACTUALIZANDO LA BASE DE DATOS'); // Actualiza\n    }, 1500);\n    this.state = {\n      text: '',\n      title: '',\n      id: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // value -- texto al cargar el editor\n    // onChange -- acci贸n a realizar cuando se actualiza el editor\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.editorContainer,\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: this.state.text,\n        onChange: this.updateBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(EditorComponent); // Exporta el componente con estilos","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/editor/editor.js"],"names":["React","ReactQuill","debounce","BorderColorIcon","withStyles","styles","EditorComponent","Component","constructor","updateBody","val","setState","text","update","console","log","state","title","id","render","classes","props","editorContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;;AAEA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAyBdC,UAzBc,GAyBD,MAAMC,GAAN,IAAc;AAAE;AACzB,YAAM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF;AAAR,OAAd,CAAN;AACA,WAAKG,MAAL;AACH,KA5Ba;;AAAA,SA8BdA,MA9Bc,GA8BLX,QAAQ,CAAC,MAAM;AAAE;AACxBY,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EADsB,CAEtB;AACD,KAHgB,EAGd,IAHc,CA9BH;AAEZ,SAAKC,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,EAAE,EAAE;AAHO,KAAb;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB,CADO,CAGP;AACA;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACE,eAAxB;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWJ,IADpB;AAEE,QAAA,QAAQ,EAAE,KAAKH;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxB2C;;AAsC9C,eAAeL,UAAU,CAACC,MAAD,CAAV,CAAmBC,eAAnB,CAAf,C,CAAmD","sourcesContent":["import React from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport debounce from '../helpers'\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport styles from './styles'\r\n\r\n// Componente editor del aplicativo\r\n\r\nclass EditorComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      text: '',\r\n      title: '',\r\n      id: '',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    // value -- texto al cargar el editor\r\n    // onChange -- acci贸n a realizar cuando se actualiza el editor\r\n\r\n    return (\r\n      <div className={classes.editorContainer}>\r\n        <ReactQuill\r\n          value={this.state.text}\r\n          onChange={this.updateBody}\r\n        ></ReactQuill>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateBody = async(val) => { // Funci贸n asincrona que actualiza el estado\r\n      await this.setState({ text: val })\r\n      this.update()\r\n  }\r\n\r\n  update = debounce(() => { // Espera a que el usuario pare 1.5 segundos y en dado caso guarda en la base de datos\r\n    console.log('ACTUALIZANDO LA BASE DE DATOS')\r\n    // Actualiza\r\n  }, 1500)\r\n\r\n}\r\n\r\nexport default withStyles(styles)(EditorComponent) // Exporta el componente con estilos\r\n"]},"metadata":{},"sourceType":"module"}