{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\sidebar\\\\sidebar.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebarItem/sidebarItem'; // Barra lateral del proyecto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SidebarComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.updateTitle = txt => {\n      this.setState({\n        title: txt\n      });\n    };\n\n    this.newNoteBtnClick = () => {\n      this.setState({\n        title: null,\n        addingNote: !this.state.addingNote\n      });\n      console.log('CREANDO UNA NUEVA NOTA');\n    };\n\n    this.newNote = () => {\n      console.log(this.state);\n    };\n\n    this.state = {\n      addingNote: false,\n      title: null\n    };\n  }\n\n  render() {\n    // Enviados a través de App.js\n    const {\n      notes,\n      classes,\n      selectedNoteIndex\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sidebarContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.newNoteBtnClick,\n        className: classes.newNoteBtn,\n        children: this.state.addingNote ? 'Cancelar' : 'Nueva nota'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), // Si esta añadiendo una nueva nota\n      this.state.addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: classes.newNoteInput,\n          placeholder: \"T\\xEDtulo\",\n          onKeyUp: e => this.updateTitle(e.target.value) // Cuando comience a escribir y suelte una tecla\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.newNoteSubmitBtn,\n          onClick: this.newNote,\n          children: \"Crear nota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : // Si no no hace nada\n      null, /*#__PURE__*/_jsxDEV(List, {\n        children: // Mapeado de las notas a una lista de notas\n        notes.map((_note, _index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SidebarItemComponent, {\n              _note: _note,\n              _index: _index,\n              selectedNoteIndex: selectedNoteIndex,\n              selectNote: this.selectNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, _index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } // Actualiza el título del texto\n\n\n}\n\nexport default withStyles(styles)(SidebarComponent); // Exporta el componente con estilos","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/sidebar/sidebar.js"],"names":["React","withStyles","styles","List","Divider","Button","SidebarItemComponent","SidebarComponent","Component","constructor","updateTitle","txt","setState","title","newNoteBtnClick","addingNote","state","console","log","newNote","render","notes","classes","selectedNoteIndex","props","sidebarContainer","newNoteBtn","newNoteInput","e","target","value","newNoteSubmitBtn","map","_note","_index","selectNote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,oBAAP,MAAiC,4BAAjC,C,CAEA;;;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA4DdC,WA5Dc,GA4DCC,GAAD,IAAS;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KA9Da;;AAAA,SAiEdG,eAjEc,GAiEI,MAAM;AACtB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeE,QAAAA,UAAU,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAvC,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,KApEa;;AAAA,SAsEdC,OAtEc,GAsEJ,MAAM;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACD,KAxEa;;AAEZ,SAAKA,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,KADD;AAEXF,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAAwC,KAAKC,KAAnD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACG,gBAAxB;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,eAAtB;AAAuC,QAAA,SAAS,EAAEQ,OAAO,CAACI,UAA1D;AAAA,kBACG,KAAKV,KAAL,CAAWD,UAAX,GAAwB,UAAxB,GAAqC;AADxC;AAAA;AAAA;AAAA;AAAA,cAFF,EAMI;AACA,WAAKC,KAAL,CAAWD,UAAX,gBACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAEO,OAAO,CAACK,YAFrB;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,OAAO,EAAGC,CAAD,IAAO,KAAKlB,WAAL,CAAiBkB,CAAC,CAACC,MAAF,CAASC,KAA1B,CAJlB,CAIoD;;AAJpD;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AACE,UAAA,SAAS,EAAER,OAAO,CAACS,gBADrB;AAEE,UAAA,OAAO,EAAE,KAAKZ,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,GAeI;AACJ,UAvBJ,eAyBE,QAAC,IAAD;AAAA,kBAEQ;AACAE,QAAAA,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACxB,8BACI;AAAA,mCACI,QAAC,oBAAD;AACI,cAAA,KAAK,EAAED,KADX;AAEI,cAAA,MAAM,EAAEC,MAFZ;AAGI,cAAA,iBAAiB,EAAEX,iBAHvB;AAII,cAAA,UAAU,EAAE,KAAKY;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUD,MAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAXD;AAHR;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6CD,GA1D4C,CA4D7C;;;AA5D6C;;AA4E/C,eAAejC,UAAU,CAACC,MAAD,CAAV,CAAmBK,gBAAnB,CAAf,C,CAAoD","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport styles from './styles'\r\nimport List from '@material-ui/core/List'\r\nimport { Divider, Button } from '@material-ui/core'\r\nimport SidebarItemComponent from '../sidebarItem/sidebarItem'\r\n\r\n// Barra lateral del proyecto\r\n\r\nclass SidebarComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      addingNote: false,\r\n      title: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Enviados a través de App.js\r\n    const { notes, classes, selectedNoteIndex } = this.props\r\n\r\n    return (\r\n      <div className={classes.sidebarContainer}>\r\n        {/*Añade una nueva nota*/}\r\n        <Button onClick={this.newNoteBtnClick} className={classes.newNoteBtn}>\r\n          {this.state.addingNote ? 'Cancelar' : 'Nueva nota'}\r\n        </Button>\r\n        {\r\n          // Si esta añadiendo una nueva nota\r\n          this.state.addingNote ? (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                className={classes.newNoteInput}\r\n                placeholder=\"Título\"\r\n                onKeyUp={(e) => this.updateTitle(e.target.value)} // Cuando comience a escribir y suelte una tecla\r\n              ></input>\r\n              <Button\r\n                className={classes.newNoteSubmitBtn}\r\n                onClick={this.newNote}\r\n              >\r\n                Crear nota\r\n              </Button>\r\n            </div>\r\n          ) : // Si no no hace nada\r\n          null\r\n        }\r\n        <List>\r\n            {\r\n                // Mapeado de las notas a una lista de notas\r\n                notes.map((_note, _index) =>{\r\n                    return(\r\n                        <div key={_index}>\r\n                            <SidebarItemComponent\r\n                                _note={_note}\r\n                                _index={_index}\r\n                                selectedNoteIndex={selectedNoteIndex}\r\n                                selectNote={this.selectNote}\r\n                            ></SidebarItemComponent>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Actualiza el título del texto\r\n  updateTitle = (txt) => {\r\n    this.setState({ title: txt })\r\n  }\r\n\r\n  // Al presionar el botón de nueva nota\r\n  newNoteBtnClick = () => {\r\n    this.setState({ title: null, addingNote: !this.state.addingNote })\r\n    console.log('CREANDO UNA NUEVA NOTA')\r\n  }\r\n  // Crea la nota\r\n  newNote = () => {\r\n    console.log(this.state)\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarComponent) // Exporta el componente con estilos\r\n"]},"metadata":{},"sourceType":"module"}