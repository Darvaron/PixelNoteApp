{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darva\\\\Documents\\\\David\\\\UD\\\\Septimo semestre\\\\FIS\\\\PixeNoteApp\\\\pixelnote\\\\src\\\\sidebar\\\\sidebar.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebarItem/sidebarItem';\nimport firebase from 'firebase';\nimport 'firebase/firestore'; // Barra lateral del proyecto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SidebarComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.signOut = () => {\n      firebase.auth().signOut();\n      this.props.history.push('/login');\n    };\n\n    this.updateTitle = txt => {\n      this.setState({\n        title: txt\n      });\n    };\n\n    this.newNoteBtnClick = () => {\n      this.setState({\n        title: null,\n        addingNote: !this.state.addingNote\n      });\n    };\n\n    this.newNote = () => {\n      this.props.newNote(this.state.title);\n      this.setState({\n        title: null,\n        addingNote: false\n      });\n    };\n\n    this.selectNote = (note, index) => {\n      this.props.selectNote(note, index);\n    };\n\n    this.deleteNote = note => {\n      this.props.deleteNote(note);\n    };\n\n    this.state = {\n      addingNote: false,\n      title: null\n    };\n  }\n\n  render() {\n    // Enviados a través de App.js\n    const {\n      notes,\n      classes,\n      selectedNoteIndex\n    } = this.props; // Lidiando con el asicronismo, si existen las notas\n\n    if (notes) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sidebarContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.newNoteBtnClick,\n          className: classes.newNoteBtn,\n          children: this.state.addingNote ? 'Cancelar' : 'Nueva nota'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), // Si esta añadiendo una nueva nota\n        this.state.addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: classes.newNoteInput,\n            placeholder: \"T\\xEDtulo\",\n            onKeyUp: e => this.updateTitle(e.target.value) // Cuando comience a escribir y suelte una tecla\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.newNoteSubmitBtn,\n            onClick: this.newNote,\n            children: \"Crear nota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this) : // Si no esta añadiendo una nota entonces no hace nada\n        null, /*#__PURE__*/_jsxDEV(List, {\n          children: // Mapeado de las notas a una lista de notas\n          notes.map((_note, _index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(SidebarItemComponent, {\n                _note: _note,\n                _index: _index,\n                selectedNoteIndex: selectedNoteIndex,\n                selectNote: this.selectNote,\n                deleteNote: this.deleteNote\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), \" \"]\n            }, _index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    } else {\n      // No genera nada mientras carga las notas\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }, this);\n    }\n  } // Acción a realizar el botón de cerrar sesión\n\n\n}\n\nexport default withStyles(styles)(SidebarComponent); // Exporta el componente con estilos","map":{"version":3,"sources":["C:/Users/darva/Documents/David/UD/Septimo semestre/FIS/PixeNoteApp/pixelnote/src/sidebar/sidebar.js"],"names":["React","withStyles","styles","List","Divider","Button","SidebarItemComponent","firebase","SidebarComponent","Component","constructor","signOut","auth","props","history","push","updateTitle","txt","setState","title","newNoteBtnClick","addingNote","state","newNote","selectNote","note","index","deleteNote","render","notes","classes","selectedNoteIndex","sidebarContainer","newNoteBtn","newNoteInput","e","target","value","newNoteSubmitBtn","map","_note","_index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport styles from './styles'\r\nimport List from '@material-ui/core/List'\r\nimport { Divider, Button } from '@material-ui/core'\r\nimport SidebarItemComponent from '../sidebarItem/sidebarItem'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\n// Barra lateral del proyecto\r\n\r\nclass SidebarComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      addingNote: false,\r\n      title: null,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Enviados a través de App.js\r\n    const { notes, classes, selectedNoteIndex } = this.props\r\n\r\n    // Lidiando con el asicronismo, si existen las notas\r\n    if (notes) {\r\n      return (\r\n        <div className={classes.sidebarContainer}>\r\n          {/*Añade una nueva nota*/}\r\n          <Button onClick={this.newNoteBtnClick} className={classes.newNoteBtn}>\r\n            {this.state.addingNote ? 'Cancelar' : 'Nueva nota'}\r\n          </Button>\r\n          {\r\n            // Si esta añadiendo una nueva nota\r\n            this.state.addingNote ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classes.newNoteInput}\r\n                  placeholder=\"Título\"\r\n                  onKeyUp={(e) => this.updateTitle(e.target.value)} // Cuando comience a escribir y suelte una tecla\r\n                ></input>\r\n                <Button\r\n                  className={classes.newNoteSubmitBtn}\r\n                  onClick={this.newNote}\r\n                >\r\n                  Crear nota\r\n                </Button>\r\n              </div>\r\n            ) : // Si no esta añadiendo una nota entonces no hace nada\r\n            null\r\n          }\r\n          <List>\r\n            {\r\n              // Mapeado de las notas a una lista de notas\r\n              notes.map((_note, _index) => {\r\n                return (\r\n                  <div key={_index}>\r\n                    <SidebarItemComponent\r\n                      _note={_note}\r\n                      _index={_index}\r\n                      selectedNoteIndex={selectedNoteIndex}\r\n                      selectNote={this.selectNote}\r\n                      deleteNote={this.deleteNote}\r\n                    ></SidebarItemComponent>\r\n                    <Divider></Divider> {/*Linea divisora entre items*/}\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n        </div>\r\n      )\r\n    } else {\r\n      // No genera nada mientras carga las notas\r\n      return <div></div>\r\n    }\r\n  }\r\n\r\n  // Acción a realizar el botón de cerrar sesión\r\n  signOut = () => {\r\n    firebase.auth().signOut()\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  // Actualiza el título del texto\r\n  updateTitle = (txt) => {\r\n    this.setState({ title: txt })\r\n  }\r\n\r\n  // Al presionar el botón de nueva nota\r\n  newNoteBtnClick = () => {\r\n    this.setState({ title: null, addingNote: !this.state.addingNote })\r\n  }\r\n\r\n  // Invoca la creación de la nota de App\r\n  newNote = () => {\r\n    this.props.newNote(this.state.title)\r\n    this.setState({title: null, addingNote: false})\r\n  }\r\n\r\n  // Invoca la selección de App\r\n  selectNote = (note, index) => {\r\n    this.props.selectNote(note, index)\r\n  }\r\n\r\n  // Invoca la eliminación de App\r\n  deleteNote = (note) => {\r\n    this.props.deleteNote(note)\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarComponent) // Exporta el componente con estilos\r\n"]},"metadata":{},"sourceType":"module"}